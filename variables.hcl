// variables.pkr.hcl
// Packer Variables

variable "admin_user" {
  type = string
  description = "Login name for admin user"
  default = "ubuntu"
}

#variable "base_image_name" {
#  type = string
#  description = "Name to use for Base image"
#}

variable "image_suffix" {
  type = string
  description = "Suffix to be appended to the end of image names"
  default = "gen3-dev.elwazi.ubuntu.20_04"
}

variable "base_image_source" {
  type = string
  description = "Source URL for base image"
  default = "https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img"
}

variable "base_image_source_format" {
  type = string
  description = "Image format of base image (qcow2 / raw / …)"
  default = "qcow2"
}

variable "build_image_flavour" {
  type = string
  description = "Virtual Image Flavour to be used when building images"
  default = "ilifu-C"
}

#variable "database_image_name" {
#  type = string
#  description = "Name to give the database image"
#}

#variable "database_node_name" {
#  type = string
#  description = "Database node's hostname"
#}

#variable "load_balancer_image_name" {
#  type = string
#  description = "Name to give the load balancer image"
#}

#variable "load_balancer_node_name" {
#  type = string
#  description = "Load balancer's hostname"
#}

#variable "rancher_rke2_server_image_name" {
#  type = string
#  description = "Name to give the rke2 server image"
#}
#
#variable "rancher_rke2_worker_image_name" {
#  type = string
#  description = "Name to give the rke2 worker image"
#}
#
#variable "rancher_rke2_worker_node_name" {
#  type = string
#  description = "rke2 worker node's base hostname"
#}

variable "rancher_rke2_worker_node_count" {
  type = number
  description = "Number of rke2 worker nodes to create"
  default = 2
}

#variable "rancher_hostname" {
#  type = string
#  description = "name of rancher host"
#}

variable "floating_ip_network_id" {
  description = "The name of the Floating IP network in your OpenStack"
  type = string
  default = "f99ab9af-902c-494b-abfc-32ccd5716234"
}

variable "network_ids" {
  type = list(string)
  description = "Name of networks to be used when building images"
  # default = ["0849e923-df2c-42a6-9ef8-1b0c9cd38182"]
}

variable "security_groups" {
  type = list(string)
  description = "Security groups to be used (this should include an incoming ssh rule…)"
  default = ["07940fba-2a99-42e4-851b-8f226144c9bd"]
}

variable "timezone" {
  type = string
  description = "Timezone to be used in machines"
  default = "Africa/Johannesburg"
}

#variable "rancher_rke2_version" {
#  type = string
#  description = "Rancher RKE version to use"
#}

// Terraform Variables

variable "node_suffix" {
  type        = string
  description = "Suffix to be appended to the end of node names"
  default = "dev"
}

variable "database_node_flavour" {
  type = string
  description = "OpenStack VM flavour to use for the database node"
  default = "ilifu-B"
}

variable "database_node_disk_size_gib" {
  type = number
  description = "Disk size in GiB for the database node"
  default = "40"
}

variable "gen3_hostname" {
  type = string
  description = "Hostname for the gen3 deployment"
}

variable "gen3_user" {
  type = string
  description = "Login name for gen3 user"
  default = "gen3"
}

variable "gen3_admin_email" {
  type = string
  description = "Email address for gen3 admin user"
}

variable "rancher_rke2_server_node_flavour" {
  type = string
  description = "OpenStack VM flavour to use for the rke2 server nodes"
  default = "ilifu-B"
}

variable "rancher_rke2_worker_node_flavour" {
  type = string
  description = "OpenStack VM flavour to use for the rke2 worker nodes"
  default = "ilifu-E"
}

variable "rancher_rke2_worker_node_disk_size_gib" {
  type = number
  description = "Disk size in GiB for the rke2 worker nodes"
  default = "160"
}

variable "rancher_rke2_server_node_disk_size_gib" {
  type = number
  description = "Disk size in GiB for the rke2 server nodes"
  default = "80"
}

variable "load_balancer_node_flavour" {
  type = string
  description = "OpenStack VM flavour to use for the database node"
  default = "ilifu-B"
}

#variable "rancher_rke2_server_node_name" {
#  type = string
#  description = "Rancher management node's hostname"
#}

variable "rancher_rke2_server_node_count" {
  type = number
  description = "Number of rancher management nodes to create"
  default = 3
}

variable "floating_ip_pool_name" {
  type = string
  description = "OpenStack Floating IP address pool name"
  default = "Ext_Floating_IP"
}

variable "name_prefix" {
  type = string
  description = "Name used in terraform infrastructure"
  default = "gen3-dev"
}

variable "ssh_public_key" {
  type = string
  description = "Your ssh public key"
}

// variables used in ansible configuration

variable "google_client_id" {
  type        = string
  description = "Google client id"
}

variable "google_client_secret" {
  type        = string
  description = "Google client secret"
  sensitive   = true
}

#variable "awsAccessKeyId" {
#  type        = string
#  description = "AWS access key id"
#}
#
#variable "awsSecretAccessKey" {
#  type        = string
#  description = "AWS secret access key"
#  sensitive   = true
#}

variable "postgres_user" {
  type = string
  description = "Main postgres username"
  default = "postgres"
}

variable "postgres_password" {
  type = string
  description = "Main postgres user password"
  sensitive = true
}

variable "postgres_fence_user" {
  type = string
  description = "fence user postgres username"
  default = "fence_user"
}

variable "postgres_fence_password" {
  type = string
  description = "fence user postgres password"
  sensitive = true
}

variable "postgres_peregrine_user" {
  type = string
  description = "peregrine user postgres username"
  default = "peregrine_user"
}

variable "postgres_peregrine_password" {
  type = string
  description = "peregrine user postgres password"
  sensitive = true
}

variable "postgres_sheepdog_user" {
  type = string
  description = "sheepdog user postgres username"
  default = "sheepdog_user"
}

variable "postgres_sheepdog_password" {
  type = string
  description = "sheepdog user postgres password"
  sensitive = true
}

variable "postgres_indexd_user" {
  type = string
  description = "indexd user postgres username"
  default = "indexd_user"
}

variable "postgres_indexd_password" {
  type = string
  description = "indexd user postgres password"
  sensitive = true
}

variable "postgres_arborist_user" {
  type = string
  description = "arborist user postgres username"
  default = "arborist_user"
}

variable "postgres_arborist_password" {
  type = string
  description = "arborist user postgres password"
  sensitive = true
}

variable "postgres_metadata_password" {
  type = string
  description = "metadata user postgres password"
  sensitive = true
}

variable "postgres_guppy_password" {
    type = string
    description = "guppy user postgres password"
    sensitive = true
}

variable "postgres_audit_password" {
    type = string
    description = "audit user postgres password"
    sensitive = true
}

variable "postgres_wts_password" {
    type = string
    description = "wts user postgres password"
    sensitive = true
}

variable "s3_host_server" {
  type        = string
  description = "S3 host server"
  default     = "oss.ilifu.ac.za"
}

variable "s3_host_port" {
    type        = number
    description = "S3 host port"
    default     = 6780
}

variable "gen3_portal_appName" {
    type        = string
    description = "Gen3 portal app name"
    default     = "eLwazi Gen3 Data Commons Portal"
}

variable "gen3_portal_index_introduction_heading" {
    type        = string
    description = "Gen3 portal index introduction heading"
    default     = "eLwazi Data Commons"
}

variable "gen3_portal_index_introduction_text" {
    type        = string
    description = "Gen3 portal index introduction text"
    default     = "The eLwazi Data Commons supports the management, analysis and sharing of data for the research community."
}

variable "gen3_portal_navigation_title" {
    type        = string
    description = "Gen3 portal navigation title"
    default     = "eLwazi Gen3 Data Commons"
}

variable "gen3_portal_login_title" {
    type        = string
    description = "Gen3 portal login title"
    default     = "eLwazi Gen3 Data Commons"
}

variable "gen3_portal_login_subtitle" {
    type        = string
    description = "Gen3 portal login subtitle"
    default     = "Enabling data science applications for health in Africa"
}

variable "gen3_portal_login_text" {
    type        = string
    description = "Gen3 portal login text"
    default     = "This African led open data science platform provides an interactive environment to apply data science techniques to diverse datasets for novel health discoveries."
}

variable "gen3_portal_login_email" {
  type        = string
  description = "Gen3 portal login email"
  default     = "support@elwazi.org"
}

variable "gen3_portal_logo_base64_png" {
    type        = string
    description = "Gen3 portal logo base64 png"
    default     = ""
}